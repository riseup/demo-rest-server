name: Jest Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  test-coverage:
    name: Test and Coverage
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]
        # node-version: [12.x, 14.x, 16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Create .env file
        run: cp ejemplo.env .env

      - name: Migrate DB
        run: npm run db:migrate

      - name: Seeds DB
        run: npm run db:seed

      - name: Test and Coverage
        run: npm run test:ci

      # Asignamos el resultado del coverage en $GITHUB_ENV
      # https://dev.to/thejaredwilcurt/coverage-badge-with-github-actions-finally-59fa
      - if: ${{ matrix.node-version == '14.x' }}
        name: Get Coverage for badge
        run: |
          SUMMARY="$(npm run test:ci -- --coverageReporters='text-summary' | tail -2 | head -1)"
          TOKENS=($SUMMARY)
          echo "COVERAGE=$(echo ${TOKENS[2]})" >> $GITHUB_ENV
          REF=${{ github.ref }}
          echo "github.ref: $REF"
          IFS='/' read -ra PATHS <<< "$REF"
          BRANCH_NAME="${PATHS[1]}_${PATHS[2]}"
          echo $BRANCH_NAME
          echo "BRANCH=$(echo ${BRANCH_NAME})" >> $GITHUB_ENV

      # Crea un gist json con el resultado del coverage
      - if: ${{ matrix.node-version == '14.x' }}
        name: Create the Badge
        uses: schneegans/dynamic-badges-action@v1.0.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: c4f7e821aa61df9b1acac1b7bd58719e
          filename: rest-api-test__${{ env.BRANCH }}.json
          label: Test Coverage
          message: ${{ env.COVERAGE }}
          color: green
          namedLogo: jest

      - name: Deploy to Heroku
        if: ${{ github.event_name == 'push' }}
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APP}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
          healthcheck: "https://${{secrets.HEROKU_APP}}.herokuapp.com/healthcheck"
          rollbackonhealthcheckfailed: true
